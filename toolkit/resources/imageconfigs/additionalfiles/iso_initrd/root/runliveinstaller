#!/bin/bash

# Use a custom termcap for the Mariner installer in an ISO environment
# for a high contrast cursor. This is based on the "linux" termcap.
export TERMINFO=/usr/lib/mariner/terminfo
export TERM=mariner-installer

# Mounting the ISO root for the installer.
ISO_ROOT=/mnt/cdrom
mkdir -p $ISO_ROOT
LABEL=CDROM

#!! PXE customization !!#
# Required for PXE boot
CONFIG_DIR=""
REPO=""
CMDLINE=/proc/cmdline
#!! end of PXE customization !!#

if grep -qs $ISO_ROOT /proc/mounts; then
    echo ISO root already mounted
#!! PXE customization !!#
elif [[ $(grep "config_root" $CMDLINE) && $(grep "repo" $CMDLINE) ]];
then
    echo "PXE boot installation for Mariner"
    /usr/sbin/configure_network.sh
    IFS=' '
    read -ra DATA <$CMDLINE
    IFS='='
    INDEX=0
    while [ $INDEX -lt ${#DATA[@]} ]
    do
        read -r VAR VALUE <<< ${DATA[INDEX]}
        if [ "${VAR}" == "config_root" ]; then
            CONFIG_DIR=$VALUE
            IFS='/'
            read -ra CUT_DIRS <<< $VALUE
            wget -r --no-parent -nH --cut-dirs=$((${#CUT_DIRS[@]}-4)) --directory-prefix=/mnt/cdrom/ --reject="index.html*" "$CONFIG_DIR"/
            echo PXE boot config dir path: "$CONFIG_DIR"
            # set execute permissions to all script files under config folder
            # files copied over network with wget might not retain file permissions
            find "$ISO_ROOT"/config/ -type f -iname "*.sh" -exec chmod a+x {} \;
            IFS='='
        elif [ "${VAR}" == "repo" ];
        then
            REPO=$VALUE
            sed -i "s#baseurl=file:///mnt/cdrom/RPMS#baseurl=$REPO#g" /etc/yum.repos.d/mariner-iso.repo
            echo PXE boot repo path: $REPO
        else
            echo "Retrieving config_root and repo details for PXE boot install..."
        fi
        ((INDEX++))
    done
    IFS=
#!! end of PXE customization !!#
else
    echo Attempt to mount the ISO root
    # It is possible that the partition isn't ready to be mounted when this script
    # is first run. So use a retry loop.
    RETRY=0
    LIMIT=5
    SLEEPSECONDS=2
    while [ $RETRY -lt $LIMIT ]
    do
        mount -L $LABEL -o ro $ISO_ROOT && break
        echo Mount failed. Retrying...
        ((RETRY++))
        sleep $SLEEPSECONDS
    done
fi

#!! PXE customization !!#
# removed espeakup
#!! end of PXE customization !!#

CONFIG_ROOT=$ISO_ROOT/config

cd /installer

# Turn off echoing while the installer runs to stop sensitive data from rendering in the TTY session.
stty -echo

./liveinstaller --base-dir $CONFIG_ROOT --imager /installer/imager --input $CONFIG_ROOT/unattended_config.json --template-config $CONFIG_ROOT/attended_config.json \
                --build-dir $PWD --log-file=/installer/log.txt
installerExitCode=$?

# Consume any buffered stdin to prevent it from being passed to any future programs,
# as it may contain sensitive data
while read -t 1 -n 10000
do
    echo ""
done

# Turn back on echoing input so the TTY session is usable for the user.
stty echo

if [ $installerExitCode -eq 0 ]; then
    echo "Mariner OS installation has been completed sucessfully! Please reboot or device will auto reboot in few seconds."
    sleep 60
    reboot
else
    /bin/bash
fi